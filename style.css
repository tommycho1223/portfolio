body {
    /* Set line height to 1.5 times the font size
         and use the OSâ€™s UI font as the website font
       */
    font: 100%/1.5 system-ui;
    max-width: 100ch;
    margin-inline: max(1em, (100% - 100ch) / 2);
    padding: 1em;
    background-color: var(--background-color); /* testing */
    color: var(--text-color); /* testing */
}

nav ul, nav li {
    display: contents;
}

nav {
    display: flex;
    gap: 1em; /* Adds spacing between items */
    margin-bottom: 1em;  /* Space between nav and content */
    border-bottom: 1px solid oklch(80% 3% 200);  /* Cool gray bottom border */
    --border-color: oklch(50% 10% 200 / 40%); /* Adapts better in dark mode */
    border-bottom-color: var(--border-color);
}

nav a {
    flex: 1; /* Ensures each link takes equal space */
    text-align: center; /* Centers text inside each link */
    padding: 0.5em; /* Adds padding for better clickability */
    text-decoration: none; /* Removes underline */
    color: inherit;  /* Use the same text color as the parent */
}

nav a.current {
    font-weight: bold; /* Highlights the current page */
    border-bottom: 0.4em solid oklch(80% 3% 200);  /* Thicker bottom border */
    padding-bottom: 0.1em;  /* Reduce padding to compensate for border */
}

/* Define the accent color as a custom property */
:root {
    --color-accent: oklch(65% 50% 0); /* Choose your desired accent color */
    color-scheme: light dark;
    --background-color: white; /* testing */
    --text-color: black; /* testing */
    --project-bg: #f5f5f5; /* Default light theme */
}

/* Apply accent color to hovered navigation links */
nav a:hover {
    border-bottom: 0.4em solid var(--color-accent); /* Apply accent color as bottom border */
    background-color: color-mix(in oklch, var(--color-accent), canvas 85%);
    color: var(--hover-text-color); /* Adaptive text color */
    transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out; /* Optional: Smooth transition effect */
}

/* Ensure all form elements inherit the page's font */
input, textarea, button {
    font: inherit;
    grid-column: 2 / -1;
    width: 100%;
    box-sizing: border-box;
}

/* Make form elements behave like block elements */
label, input, textarea, button {
    display: block;
    width: 100%; /* Full width of the container */
    box-sizing: border-box; /* Includes padding and border in width calculation */
}

/* Add spacing between labels */
label {
    margin-block: 0.5em;
    display: contents;
}

/* Apply CSS Grid to the form */
form {
    display: grid;
    grid-template-columns: auto 1fr; /* First column fits content, second takes remaining space */
    gap: 1em; /* Adds spacing between elements */
}

/* Ensure the button spans the full form width */
button {
    grid-column: 1 / -1; /* Spans the entire row */
}

/* Make .projects a grid container */
.projects {
    display: grid;
    grid-template-columns: repeat(3, minmax(220px, 1fr)); /* Ensures 3 columns */
    gap: 1em; /* Space between projects */
    padding: 1em;
    max-width: 850px; /* Limit max width to keep alignment */
    margin: auto; /* Center the grid */
}

/* Style individual articles */
.projects article {
    background-color: var(--project-bg);
    padding: 1em;
    border-radius: 5px; /* Slightly rounded corners */
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: space-between; /* Ensures proper spacing */
    height: fit-content; /* Prevents forced height */
    min-height: 280px; /* Ensures consistency */
}

/* Style images */
.projects img {
    width: 100%;
    height: auto;
}

.projects article h2 {
    margin: 0;
}

/* Improve heading sizes */
h1 {
    font-size: 200%; /* Make h1 significantly larger */
}

/* Improve readability for all headings */
h1, h2, h3, h4, h5, h6 {
    line-height: 1; /* Adjusts spacing */
    text-wrap: balance; /* Prevents uneven lines */
}

/* Container for the entire CV */
.cv-container {
    display: grid;
    grid-template-columns: 1fr 3fr; /* Sidebar takes 1 part, main content takes 3 parts */
    gap: 2em;
    max-width: 900px;
    margin: auto;
    padding: 2em;
}

/* Style the Sidebar in cv */
.cv-sidebar {
    background-color: var(--sidebar-bg);
    color: var(--sidebar-text);
    padding: 1.5em;
    border-radius: 8px;
}

/* Style Main Content */
.cv-main {
    display: flex;
    flex-direction: column;
    gap: 1.5em;
}

/* Improve Section Headings */
.cv-main h1, .cv-sidebar h2 {
    border-bottom: 2px solid #333;
    padding-bottom: 0.5em;
}

/* Style Lists for Readability */
.cv-main ul {
    padding-left: 1.5em;
    line-height: 1.6;
}

@media (max-width: 900px) {
    .projects {
        grid-template-columns: repeat(2, 1fr); /* 2 columns for medium screens */
    }

    .container {
        flex-direction: column;
        align-items: center;
    }

    .container svg {
        width: 50ww; /* Reduce pie chart size */
    }

    /* Adjust legend to 2 columns */
    .legend {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media (max-width: 600px) {
    .cv-container {
        grid-template-columns: 1fr; /* Stacks everything vertically on small screens */
    }
    .projects {
        grid-template-columns: 1fr; /* 1 column for small screens */
    }

    .container {
        flex-direction: column; /* Stacks elements vertically */
        align-items: center;
    }

    .container svg {
        width: 70vw; /* Further reduce size for smaller screens */
    }

    /* Ensure legend is a single column */
    .legend {
        grid-template-columns: repeat(auto-fill, minmax(7em, 1fr)); /* Adjust legend layout */
        text-align: center;
        justify-items: center;
    }
}

/* Force Light Mode */
[data-theme="light"] {
    color-scheme: light;
    --background-color: white !important;
    --text-color: black !important;
}

/* Force Dark Mode */
[data-theme="dark"] {
    color-scheme: dark;
    --background-color: black !important;
    --text-color: white !important;
    --project-bg: #333; /* Darker background for dark mode */
}

/* Position theme switcher in the top-right corner */
.color-scheme {
    position: absolute;
    top: 1rem;
    right: 1rem;
    font-size: 80%; /* Make it slightly smaller */
    font-family: inherit; /* Ensure it inherits the same font */
}

#profile-stats {
    max-width: 800px; /* Adjust width to fit the stats */
    margin: 20px auto; /* Center align */
    text-align: center;
}

#profile-stats dl {
    display: grid;
    grid-template-columns: repeat(4, 1fr); /* Creates 4 equal-width columns */
    gap: 20px; /* Adds spacing between columns */
    text-align: center;
}

#profile-stats dt {
    font-weight: bold;
    font-size: 1rem;
    color: gray; /* Subtitle color */
    text-transform: uppercase; /* Makes text uppercase */
}

#profile-stats dd {
    font-size: 2.5rem;
    margin: 0;
    font-weight: bold;
}

#projects-pie-plot {
    max-width: 20em;
    margin-block: 2em;
    overflow: visible;
}

/* Style the legend container */
.legend {
    flex: 1; /* Allows legend to take available space */
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(9em, 1fr)); /* Adjusts from multiple columns to 1 */
    gap: 10px; /* Space between items */
    /* justify-content: center; */
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 8px;
    max-width: 100%; /* Ensures it doesn't exceed container */
}

/* Style each legend item */
.legend li {
    display: flex;
    align-items: center;
    gap: 5px;
    white-space: nowrap; /* Prevents text from wrapping unnecessarily */
}

/* Create the color swatch */
.legend .swatch {
    width: 12px;
    height: 12px;
    display: inline-block;
    border-radius: 50%;
    background: currentColor;
}

/* Container to align pie chart and legend side by side */
.container {
    display: flex;
    align-items: center;  /* Aligns items vertically */
    justify-content: center;
    gap: 2rem;  /* Space between pie chart and legend */
    max-width: 90vw;
    margin: auto;
    flex-wrap: wrap; /* Ensures responsiveness on smaller screens */
}

.container svg {
    flex: 0 0 auto;
    width: 35vw; /* Adjusts based on viewport width */
    height: auto;
    max-width: 300px; /* Prevents it from growing too large */
}

@media (max-width: 768px) {
    .container {
        flex-direction: column; /* Stacks elements vertically on smaller screens */
        align-items: center;
    }
}

svg:has(path:hover) path:not(:hover) {
    opacity: 0.5;
}

path {
    transition: 300ms;
}